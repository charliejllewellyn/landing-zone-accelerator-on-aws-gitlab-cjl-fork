AWSTemplateFormatVersion: 2010-09-09
Description: This template will remove Landing Zone Accelerator on AWS and all it's components from accounts in the organisation.

Parameters:
  LandingZoneAcceleratorStack:
    Type: 'String'
    Default: AWSAccelerator-InstallerStack
    Description: 'The name of the Landing Zone Accelerator installation stack you used to deploy Landing Zone Acceleartor on AWS'
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id'
  DeleteInstallerStack:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: 'If set to true (default) this will remove the original installer stack you deployed to setup Landing Zone Accelerator on AWS. If set to false the stack will remain allowing you to re-run the AWSAccelerator-Installer to redeploy your landing zone configuration'
    Type: 'String'
  DeleteConfigRepository:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: 'If set to true (default) this will remove your Landing Zone Accelerator on AWS configuration repository. If set to false the repository will remain.'
    Type: 'String'
  RunNumber:
    Default: 1
    Description: 'Update this value to force the uninstaller to re-run'
    Type: 'String'

Resources:
  vpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://aws-quickstart.s3.amazonaws.com/quickstart-aws-vpc/templates/aws-vpc.template.yaml
      TimeoutInMinutes: '60'
      Parameters:
        AvailabilityZones: !Sub ${AWS::Region}a,${AWS::Region}b
        NumberOfAZs: 2

  CleanupEC2Role: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CleanupEC2InstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Path: "/"
      Roles: 
        - !Ref CleanupEC2Role

  CleanupEC2:
    Type: "AWS::EC2::Instance"
    CreationPolicy: 
      ResourceSignal:
        Timeout: PT8H
    Properties:
      SubnetId: !GetAtt vpc.Outputs.PrivateSubnet1AID
      ImageId: !Ref LatestAmiId
      InstanceType: t3.large
      IamInstanceProfile: !Ref CleanupEC2InstanceProfile
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'sudo apt-get update -y

              '
            - 'wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
              
              '
            - 'dpkg -i -E ./amazon-cloudwatch-agent.deb

              '
            - 'sudo apt-get -y install python3-pip

              '
            - 'mkdir -p /opt/aws/

              '
            - 'sudo pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz

              '
            - 'sudo ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup

              '
            - "/usr/local/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource CleanupEC2 "
            - "         --configsets Configuration "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "/usr/local/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource CleanupEC2 "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          Configuration:
            - install_and_enable_cfn_hup
            - Install
            - EnableServices
            - RunCommands
        install_and_enable_cfn_hup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WebServerInstance '
                  - '         --configsets InstallAndRun '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

                  - |
                    runas=root
              mode: '000400'
              owner: root
              group: root
            /lib/systemd/system/cfn-hup.service:
              content:
                Fn::Join:
                - ''
                - - "[Unit]\n"
                  - "Description=cfn-hup daemon\n\n"
                  - "[Service]\n"
                  - 'Type=simple

                    '
                  - 'ExecStart=/usr/local/bin/cfn-hup

                    '
                  - "Restart=always\n\n"
                  - "[Install]\n"
                  - WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
        Install:
          packages:
            apt:
              git: []
              jq: []
          files:
            /root/uninstall-lza.sh:
              content: !Sub 
                - |
                  #!/bin/bash
                  
                  # Set region
                  region=$(curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)
                  export AWS_REGION=$region
                  logFile='/var/log/landing-zone-accelerator-on-aws-cleanup'

                  echo "################## RUN NUMBER ${updateFlag} ##################" > $logFile

                  if [[ "${deleteInstaller}" == "true" ]]; then
                    deleteFlag="--installer-delete true"
                  else
                    deleteFlag=""
                  fi

                  if [[ "${deleteRepo}" == "true" ]]; then
                    repoFlag="--delete-config-repo true"
                  else
                    repoFlag=""
                  fi

                  cd /root

                  if ! [ -d "landing-zone-accelerator-on-aws" ]; then
                    git clone https://github.com/awslabs/landing-zone-accelerator-on-aws.git &>>$logFile
                  fi

                  cd landing-zone-accelerator-on-aws/source &>>$logFile
                  nodeVersion=$(grep "@types/node" 'packages/@aws-accelerator/accelerator/package.json' | awk '{print $2}' | sed 's/"//g' | awk -F. '{print $1}')

                  if [ -z $nodeVersion ]; then
                    nodeVersion=18
                  fi

                  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
                  source /.nvm/nvm.sh &>>$logFile
                  source ~/.bashrc &>>$logFile

                  nvm install $nodeVersion &>>$logFile

                  npm install yarn -g &>>$logFile
                  
                  yarn install &>>$logFile
                  cd packages/@aws-accelerator/tools/ &>>$logFile
                  yarn run --verbose ts-node --transpile-only uninstaller.ts --installer-stack-name ${stackName} --ignore-termination-protection true --full-destroy true $deleteFlag $deleteRepo --partition aws --delete-data --ignore-termination-protection --delete-bootstraps true --delete-pipelines &>>$logFile
                  /usr/local/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource CleanupEC2 --region ${AWS::Region}
                - stackName: !Ref LandingZoneAcceleratorStack
                  deleteInstaller: !Ref DeleteInstallerStack
                  deleteRepo: !Ref DeleteConfigRepository
                  updateFlag: !Ref RunNumber
              mode: '000755'
              owner: root
              group: root
            /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json:
              content: |
                {
                        "agent": {
                                "run_as_user": "root"
                        },
                        "logs": {
                                "logs_collected": {
                                        "files": {
                                                "collect_list": [
                                                        {
                                                                "file_path": "/var/log/landing-zone-accelerator-on-aws-cleanup",
                                                                "log_group_name": "landing-zone-accelerator-on-aws-cleanup",
                                                                "log_stream_name": "{instance_id}",
                                                                "retention_in_days": 90
                                                        }
                                                ]
                                        }
                                }
                        },
                        "metrics": {
                                "metrics_collected": {
                                        "statsd": {
                                                "metrics_aggregation_interval": 0,
                                                "metrics_collection_interval": 10,
                                                "service_address": ":8125"
                                        }
                                }
                        }
                }
        EnableServices:
          services:
            systemd:
              amazon-cloudwatch-agent:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        RunCommands:
          commands:
            uninstallLZA:
              command: "/root/uninstall-lza.sh"

Outputs:
  CleanupLogs:
    Description: Logs from cleanup activity
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logsV2:log-groups/log-group/landing-zone-accelerator-on-aws-cleanup
